--------------------------------------------------------------------------------------------------------------------
Estutura básica OO:
--------------------------------------------------------------------------------------------------------------------

	- Classe
	- Atributo
	- Método
	- Objeto
	- Mensagem

--------------------------------------------------------------------------------------------------------------------
1) Classe:
--------------------------------------------------------------------------------------------------------------------

"É uma estrutura que abstrai um conjunto de objetos com características similares. 
Uma clasee define o comportamento de seus objetos através de métodos e os estados possíveis 
destes objetos através de atributos. Em outros termos, uma classse descreve os serviços providos 
por seus objetos e quais informações eles podem armazenar"
(Uma classe serve de molde para um objeto)

--------------
Exemplos: 
--------------

	- bola
	- carro
	- viagem
	- venda
	- comprador
	- computador

--------------
Dicas: 
--------------

	- Substantivos
	- Nomes significativos
	- Contexto deve ser considerado

--------------
Códigos:
--------------

	- Java:
		class Carro {}
	- C#:
		class Carro {}
	- Python:
		class Carro:
			pass
--------------
Exercício: 
--------------

Crie a classe "Carro"
	class Carro {
	}

--------------------------------------------------------------------------------------------------------------------
2) Atributo:
--------------------------------------------------------------------------------------------------------------------

"É o elemento de uma classe responsável por definir sua estrutura de dados. 
O conjunto destes será responsável por representar suas características e 
fará parte dos objetos criados a partir da classe"

--------------
Exemplo:
--------------

	- Bola: diâmetro
	- Carro: cor
	- Viagem: distância
	- computador:  memória
	- Venda: valor
	- Comprador: nome

-----------------------
Atributo x Variável:
-----------------------

	- Atributo: O que é próprio e peculiar a alguém ou a alguma coisa
	- Variável: Sujeito a variações ou mudanças; que pode variar; insconstante, instável

	Atributos são criados dentro das classes
	Variáveis são criadas dentro de métodos

--------------
Dicas:
--------------
	- Substantivos e adjetivos
	- Nome significativos
	- Contexto deve ser considerado
	- Abstração
	- Tipos adequados

--------------
Códigos:
--------------

	- Java e C#:
		class Carro {
			int portas;
		}

	- Python:
		class Carro:
			portas = 0

--------------
Exercício 2:
--------------

	Evolua o exercício 1 e defina 3 atributos para sua classe "Carro": cor, modelo e capacidade tanque

	class Carro{
		String cor;
		String modelo;
		int capaciadeTanque;
	}

--------------------------------------------------------------------------------------------------------------------
3) Método
--------------------------------------------------------------------------------------------------------------------

"É uma porção de código (sub-rotina) que é disponibilizada pela classe. 
Este é executado quando é feita uma requisição a ele. Um método serve para identificar quais serviços, 
ações, que a classe oferece. Esses são responsáveis por definir e realizar um determiado comportamento"

--------------
Exemplos: 
--------------

	- Carro: ligar
	- Computador: desligar
	- Venda: calcular total
	- Comprador: realizar troca

--------------
Criação:
--------------

	- Java e C#:
		- Visibilidade
		- Retorno
		- Nome
		- Parâmetros

	- Python: 
		- def
		- Nome
		- Parâmetros

--------------
Dicas:
--------------

	- Verbos
	- Nomes significativos
	- Contexto deve ser considerado

--------------
Códigos:
--------------

	- Java e C#:
		class Carro{
			void frear() {
		}

	- Puthon:
		class Carro:
			def frear()

----------------------
Métodos especiais:
----------------------

	- Constructor:
		Constrói objetos. Cria objetos a partir de um classe e coloca valores iniciais
		
		- Java e C#:						o constructor deve ter o mesmo nome da classe
			class Carro {
				Carro () {
				}
			}

		- Python:
			class Carro:
				def __init__(self):


	- Destructor:
		Auxilia na destruição do objeto

		- Java:
			class Carro {
				void finalize(){
				}
			}

		- C#:
			class Carro {
				~Carro() {
				}
			}

		- Python: 
			class Carro:
				def __del__(self) :

--------------
Sobrecarga:
--------------

	Mudar a assinatura de acordo com a necessidade
	- Assinatura: nome + parâmetros

	- Java:
		m1 ()
		m1 (int i)
		m1 (float f)
		m1 (String s, long l)
		m1 (long l, String s)

	- C#:
		M1()
		M1(int i)
		M1 (float f)
		M1 (String s, long l)
		M1 (long l, String s)

	- Python:
		Não existe sobrecarga, pois é uma liguagem interpretada e dinâmica, contrário de Java e C#

	Por que usar?
		Mantém a abstração alvo, mudando apenas a lista de parâmetros

--------------
Exercício 3:
--------------

Evolua o conceito do exercício 2 e defina 1 método para calcular o valor total para encher o tanque. 
Este deve receber como parâmetro o valor da gasolina. Faça também duas sobrecargas do construtor.
Obs: Crie métodos específicos para fornecer e obter os valores dos atributos (set/get), caso aplicável.

--------------------------------------------------------------------------------------------------------------------
4) Objeto:
--------------------------------------------------------------------------------------------------------------------

"Um objeto é a representação de um conceito/entidade do mundo real, 
que pode ser física (bola, carro, árvore, etc...) ou conceitual (viagem, estoque, compra, etc...) 
e possui um significado bem definido para um determinado software. 
Para esse conceito/entidade, deve ser definida inicialmente uma classe a partir da qual 
posteriormente serão instanciados objetos distintos"

Objetos são instâncias da classe

--------------
Criação:
--------------

	-Java e C#:
		Tipo nome = new constructor;
		Carro carro = new Carro ();
	
	- Python:
		carro = Carro()

--------------------------------------------------------------------------------------------------------------------
5) Mensagem:
--------------------------------------------------------------------------------------------------------------------

"É o processo de ativação de um método de um objeto. Isto ocorre quando uma requisição (chamada) 
a esse método é realizada, assim disparando a execução de seu comportamento descrito por sua classe. 
Pode também ser direcionada diretamente à classe, caso a requisição seja a um método estático"

--------------
Criação:
--------------

	- Java e C#: 

		Carro carro = new Carro();
		carro.<método>;					objeto
		
		Carro.<método>;					classe

	- Python: 
		
		carro = Carro()
		carro.<método>

		Carro.<método>

--------------
Exercício 4:
--------------

Evolua o conceito do exercício 3 criando objetos da classe "Carro". Use os métodos set/get, 
quando aplicáveis, para definir os valores dos atributos exibir estes valores "get". 
Passe também uma mensagem para o cálculo do total para encher o tanque.

Obs: use sout, Console.WriteLine ou print